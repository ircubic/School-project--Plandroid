#+latex_class: oreport
#+LATEX_HEADER: \usepackage[utf8]{inputenc}
#+LATEX_HEADER: \usepackage[T1]{fontenc}
#+LATEX_HEADER: \usepackage{graphicx}
#+LATEX_HEADER: \usepackage[usenames,dvipsnames]{color}
#+LATEX_HEADER: \usepackage{longtable}
#+LATEX_HEADER: \usepackage{float}
#+LATEX_HEADER: \usepackage{wrapfig}
#+LATEX_HEADER: \usepackage{soul}
#+LATEX_HEADER: \usepackage{amssymb}
#+LATEX_HEADER: \usepackage{hyperref}
#+LATEX_HEADER: \usepackage{hypcap}
#+LATEX_HEADER: \hypersetup{colorlinks=true,linkcolor=red,citecolor=black,filecolor=magenta, urlcolor=cyan}
Prototypes

* First prototype
The first prototype is a very focused prototype, designed to facilitate my first
test scenarios on testing how to present conflicts so they can be resolved in a
user friendly manner.

The screens necessary to go through the scenarios are as follows:

  1. Initial screen, with "Create event" button
  2. Create event screen.
  3. Invite friend(s) screen
  4. Conflict resolution screen
  5. Creation success screen

The screens should be made mostly as described in the requirements documents,
but with simplifications to cut down development time of the prototype. In
particular, the create event screen will forego everything regarding maps and
locations, as it would take a massive amount of time to implement, and is only
tangential to the purpose of the prototype.

In addition, the prototype will provide a default friend list, and any conflicts
are dynamically generated (no actual schedule lookup happens, but a percentage
of friends satisfying the scenario criteria is randomly chosen to be
conflicts). The prototype will also largely ignore any life-cycle issues,

Issues I see with this prototype design is that it won't capture the reflection
over conflicts on part of the user that it would if the friend list contained
actually real friends.
